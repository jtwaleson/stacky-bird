Order: (impact 1 high, 4 low) (effort 1 low, 4 high)

* [ ] 1 1 remove the blocks from the levels to make them playable
* [ ] 1 2 add + - operators PLUS MINU, ⊕, ⊖
* [ ] 1 2 add SUMA to SUM the entire list: ∑
* [ ] 1 2 add a validator for levels
* [ ] 1 2 instruction: IFTE go left/right depending on truth value of stack
* [ ] 1 2 position the stack next to the bird
* [ ] 1 3 add translation files
* [ ] 2 1 add "no blocks are available for this level" placeholder for level 1
* [ ] 2 1 double click board item to remove
* [ ] 2 1 show objective per level
* [ ] 2 1 use tooltips to show information about instructions
* [ ] 2 2 animations / messages when level is completed or the bird dies
* [ ] 2 3 add a favicon
* [ ] 2 3 add music / effects
* [ ] 2 4 add animations when hovering over instructions
* [ ] 3 1 add "factory reset" menu button to clear everything
* [ ] 3 2 add LICENSE
* [ ] 3 2 droppable indicator on the board (highlight where instructions can be placed)
* [ ] 3 2 instruction: JUMP to physically jump over two fields
* [ ] 3 2 instruction: LTCH flip-flop
* [ ] 3 2 nice in-game menu with icons
* [ ] 3 2 think about level tech tree (0xxx -> movement, 1xxx -> stack, 2xxx multi-bird)
* [ ] 3 3 add efficiency meters and scoring per level
* [ ] 3 3 instruction: PRTL to jump to another place on the board
* [ ] 3 3 instruction: inc current register
* [ ] 3 3 instruction: pop number on register
* [ ] 3 3 visualize the amount of levels remaining, and hide them fog-of-war style
* [ ] 3 4 create a shitload of levels
* [ ] 3 4 register over multiple fields (instructions affects field next to it)
* [ ] 4 2 move board item by dragging it
* [ ] 4 2 only show directly reachable instructions
* [ ] 4 3 create static integrity checks so that compilation fails if not all information is correct
* [ ] 4 3 instruction: dump the entire stack here, restore it when picking up
* [ ] 4 3 save level design in localStorage
* [ ] 4 4 check with unit tests if all levels can be rendered
* [ ] 4 4 instruction: JMPB to go to a named sub-board
* [ ] 4 4 instruction: SPWN to create a new bird (multi-processing)
* [x] 1 1 link stackybird.com
* [x] 1 2 design the level selector
* [x] 2 1 add gh pages deployment
