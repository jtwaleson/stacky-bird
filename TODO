Order: (impact 1 high, 4 low) (effort 1 low, 4 high)

* [ ] 1 1 add DUMP instruction to dump/fetch a number, so that we can make DUP2
* [ ] 1 2 create pop-up menu for instruction selector (not draggable)
* [ ] 1 3 create puzzles for logic, summing, reverting
* [ ] 2 1 introduce speedy bird
* [ ] 2 1 unlock different speed setting after the GEQ1 level
* [ ] 2 3 add a favicon
* [ ] 2 3 add music / effects
* [ ] 2 3 create a level editor for quick level creation
* [ ] 2 3 mobile friendly
* [ ] 2 4 add animations when hovering over instructions
* [ ] 2 4 create a new bird icon
* [ ] 3 2 add LICENSE
* [ ] 3 2 create an English text inventory, if not found, raise an error
* [ ] 3 2 instruction: LTCH flip-flop
* [ ] 3 3 add efficiency meters and scoring per level
* [ ] 3 3 complete keyboard navigation
* [ ] 3 3 instruction: inc/dev current register
* [ ] 3 3 instruction: pop number on register
* [ ] 3 4 compare solutions with friends / share screen with teachers etc.
* [ ] 3 4 create a shitload of levels
* [ ] 3 4 register over multiple fields (instructions affects field next to it)
* [ ] 4 1 add ROTA operator to rotate put the top item of the stack on the bottom
* [ ] 4 1 refactor grid layout for buttons on tiles
* [ ] 4 3 create static integrity checks so that compilation fails if not all information is correct
* [ ] 4 3 instruction: dump the entire stack here, restore it when picking up
* [ ] 4 4 check with unit tests if all levels can be rendered
* [ ] 4 4 instruction: JMPB to go to a named sub-board
* [ ] 4 4 instruction: SPWN to create a new bird (multi-processing)
* [x] 1 1 link stackybird.com
* [x] 1 1 remove the blocks from the levels to make them playable
* [x] 1 2 actually put all the content in the translation file
* [x] 1 2 add + - operators PLUS MINU, ⊕, ⊖
* [x] 1 2 add SUMA to SUM the entire list: ∑
* [x] 1 2 add a validator for levels - needed for level 2001
* [x] 1 2 after modal is implement, allow users to stay on the levels
* [x] 1 2 design the level selector
* [x] 1 2 instruction: IFTE go left/right depending on truth value of stack
* [x] 1 2 position the stack next to the bird
* [x] 1 2 the bird is not on finished when the level is finished
* [x] 1 3 add translation files
* [x] 1 3 create a validator runner to validates all test cases and shows progress to the user
* [x] 1 3 level6 till 10, various mazes
* [x] 2 1 add "no blocks are available for this level" placeholder for level 1
* [x] 2 1 add gh pages deployment
* [x] 2 1 double click board item to remove
* [x] 2 1 show objective per level
* [x] 2 1 use tooltips to show information about instructions
* [x] 2 2 animations / messages when level is completed or the bird dies
* [x] 2 2 fix level structure for arrows
* [x] 2 2 fix play/start/step buttons
* [x] 2 2 prevent editing while playing
* [x] 2 2 refactor levels so that they are just javascript files instead of Vue components
* [x] 2 3 show modal block selector when clicking on an empty tile
* [x] 3 1 add "factory reset" menu button to clear everything
* [x] 3 2 add vue router
* [x] 3 2 droppable indicator on the board (highlight where instructions can be placed)
* [x] 3 2 instruction: JUMP to physically jump over two fields
* [x] 3 2 nice in-game menu with icons
* [x] 3 2 think about level tech tree (0xxx -> movement, 1xxx -> stack, 2xxx multi-bird)
* [x] 3 3 instruction: PRTL to jump to another place on the board
* [x] 3 3 visualize the amount of levels remaining, and hide them fog-of-war style
* [x] 4 1 bug fix: field is draggable
* [x] 4 2 move board item by dragging it
* [x] 4 2 only show directly reachable instructions
* [x] 4 3 save level design in localStorage
